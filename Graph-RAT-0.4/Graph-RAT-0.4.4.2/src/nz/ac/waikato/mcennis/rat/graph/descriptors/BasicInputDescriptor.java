/* * BasicInputDescriptor.java * * Created on 14 September 2007, 13:54 * * Copyright Daniel McEnnis, published under Aferro GPL (see license.txt) */package org.dynamicfactory.descriptors;/** * *  * Class for describing the input that a component requires. Implements the  * InputDesciptor and InputDescriptorInternal interfaces. * @author Daniel McEnnis */public class BasicInputDescriptor implements InputDescriptorInternal{    String propertyName;        InputDescriptor.Type type;        String relation;        String algorithmName;        /** Creates a new instance of BasicInputDescriptor */    public BasicInputDescriptor() {    }    @Override    public void setProperty(String s) {        propertyName = s;    }    @Override    public void setClassType(InputDescriptor.Type t) {        type = t;    }    @Override    public void setRelation(String s) {        relation = s;    }    @Override    public void setAlgorithmName(String s) {        algorithmName = s;    }    @Override    public String getAlgorithmName() {        return algorithmName;    }    @Override    public String getRelation() {        return relation;    }    @Override    public InputDescriptor.Type getClassType() {        return type;    }    @Override    public String getProperty() {        return propertyName;    }    }