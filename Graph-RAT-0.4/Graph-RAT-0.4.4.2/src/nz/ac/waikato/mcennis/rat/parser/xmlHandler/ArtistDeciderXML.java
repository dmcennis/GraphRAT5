/* * ArtistDecider.java * * Created on 12 June 2007, 14:10 * * Copyright Daniel McEnnis, published under Aferro GPL (see license.txt) */package org.mcennis.graphrat.parser.xmlHandler;import org.mcennis.graphrat.crawler.Crawler;import nz.ac.waikato.mcennis.rat.graph.artist.decider.ArtistDecider;import org.mcennis.graphrat.parser.ParsedObject;import org.xml.sax.Attributes;import org.xml.sax.SAXException;/** * Class for parsing ArtistDecider XML formats into an artist decider object * * @author Daniel McEnnis *  */public class ArtistDeciderXML extends Handler{        enum State {START,BASE,STRING,ARTIST};        State state = State.START;        private ArtistDecider decider;        /** Creates a new instance of ArtistDecider */    public ArtistDeciderXML() {    }    @Override    public void startElement(String uri, String localName, String qName, Attributes attributes) throws SAXException {        if(localName.equalsIgnoreCase("artistList")){            state = State.BASE;        }else if(localName.equalsIgnoreCase("string")){            state = State.STRING;        }else if(localName.equalsIgnoreCase("artist")){            state = State.ARTIST;        }    }    @Override    public void startDocument() throws SAXException {        state = State.START;    }    @Override    public ParsedObject get() {        return decider;    }    @Override    public void endDocument() throws SAXException {    }    @Override    public void endElement(String uri, String localName, String qName) throws SAXException {        if(localName.equalsIgnoreCase("artistList")){            state = State.START;        }else if(localName.equalsIgnoreCase("string")){            state = State.BASE;        }else if(localName.equalsIgnoreCase("artist")){            state = State.BASE;        }    }    @Override    public Handler duplicate() {        ArtistDeciderXML ret = new ArtistDeciderXML();        ret.setDecider(decider);        return ret;    }    @Override    public void characters(char[] ch, int start, int length) throws SAXException {        if(state == State.STRING){            decider.addChecked(new String(ch,start,length));        }else if(state == State.ARTIST){            decider.addArtist(new String(ch,start,length));        }    }    @Override    public void setCrawler(Crawler crawler) {    }    /**     * Set the decider loaded by this parser     * @param d decider to be loaded.     */    public void setDecider(ArtistDecider d){        decider = d;    }    @Override    public void set(ParsedObject o) {        if(o instanceof ArtistDecider){            decider = (ArtistDecider)o;        }    }}